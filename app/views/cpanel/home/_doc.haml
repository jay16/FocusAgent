%h1 Document
%p agent server with deploy(monitor/logger/rake)/api command explain.
%h2 Deploy
%h3 git
%pre
  %code
    :preserve
      ````
      # situation 1: without git init
      git clone https://github.com/jay16/focus_mail_agent.git
      
      # situation 2：code already exist
      cd app_root_path
      git reset --hard HEAD
      git pull origin master
      
      # be sure under webmail
      # or execute 
      chown -R webmail:webmail app_root_path
      ````
%h3 gem
%pre
  %code
    :preserve
      ````
      cd app_root_path
      bundle install --local
      # gem install 'notfound-gem' when abort
      ````
%h3 generate
%pre
  %code
    :preserve
      ````
      # mkdir necessary direcotries and generate config tmp files
      bundle exec rake agent:deploy
      # tell you what omit 
      bundle exec rake agent:check
      # clear test files after test with rspec
      bundle exec rake agent:clear
      ````
%h3 rspec
%pre
  %code
    :preserve
      ````
      # generate email files like focus_mail server
      bundle exec rspec spec/controllers
      # view generate files
      tree public/{openapi,mailtem}
      
      # download/tar extract/move to fake mailgates/wait
      bundle exec rake agent:main RACK_ENV=test
      tree public/mailgates
      ````
%h3 nohup
%pre
  %code
    :preserve
      ````
      cd app_root_path
      /bin/sh nohup.sh {start|stop|status}
      
      # ps: rake task called by nohup.sh **every 5 seconds**
      ````
%h3 unicorn
%pre
  %code
    :preserve
      ````
      cd app_root_path
      /bin/sh unicorn.sh {start|stop}
      
      # view browser
      http://localhost:3456
      # view logs
      tail -f log/*
      
      # ps: nohup.sh called by unicorn.sh
      ````
%h3 crontab
%pre
  %code
    :preserve
      ````
      # crontab operation list
      # crontab @jobs command write in Rakefile
      bundle exec rake crontab:list     # list all crontab jobs
      bundle exec rake crontab:add      # add @jobs with check exist
      bundle exec rake crontab:remove   # remove @jobs
      bundle exec rake crontab:exist    # check whether @job exist
      bundle exec rake crontab:jobs     # print @jobs command
      
      # don't loose with crontab @jobs workly
      # bundle/rake/unicorn command may run normally with hand
      # but not ok with bash script called by crontab
      
      # check it with below steps:
      cd app_root_path
      bundle exec rake crontab:add
      /bin/sh unicorn.sh stop
      tail -f log/*
      
      # it's ok when crontab @jobs startup unicorn and nohup successfully.
      # best for browser operate.
      
      # ps: crontab @jobs execute unicorn.sh {stop|start} when unicorn and nohup not all ok **every minute**
      ````
%h3 ChkDog
%pre
  %code
    :preserve
      ````
      # crontab jobs execute chkdog.sh every minute.
      # chkdog.sh check unicorn/nohup process status,
      # kill unicorn/nohup and restart when not all ok.
      
      /bin/sh chkdog.sh
      ````
%h3 1->2->3
%pre
  %code
    :preserve
      ````
      # switch to root
      cd app_root_path
      /bin/sh install.sh
      
      # **point**
      # switch to webmail
      su - webmail
      
      # bundle install
      cd app_root_path
      bundle install --local
      
      # RACK_ENV for really environment
      bundle exec rake agent:deploy RACK_ENV=production
      bundle exec rake agent:check RACK_ENV=production
      
      # test with rspec can put here when necessay.
      # rspec generate email file is not correct, 
      # only check download/tar extract/move
      
      # should over when lucklly.
      bundle exec rake crontab:remove
      bundle exec rake crontab:add
      tail -f log/*
      
      # start up with chkdog
      /bin/sh chkdog.sh
      ````
%h2 API
%h3 api list
%pre
  %code
    :preserve
      ````
      # download trigger/download/move data
      # params:
      #     token: necessary
      #     timestamp: optional,yyyymmdd, default today
      GET /cpanel/open/data
      
      # download mailgates log file
      # params:
      #     token: necessary
      #     filename: optional,default "mgmailerd.log"
      GET /cpanel/open/log
      
      # download mailgates archived log file
      # params:
      #     token: necessary
      #     timestamp: optional,yyyymmdd, default today(response: file not exist)
      GET /cpanel/open/archived
      
      
      # get webapp/nohup/crontab run state
      # params:
      #     token: necessary
      GET /cpanel/open/process
      
      
      # get mailgates log content from line_number 
      # params:
      #     token: necessary
      #     filename: optional,default "mgmailerd.log"
      #     line_number: necessary, more +line_number log_file
      get "/log/line_number" do
      ````
%h2 Crash
%h3 git pull
%p error code:
%pre
  %code
    :preserve
      ````
      [webmail@localhost focus_mail_agent]$ git pull     origin master
      Permission denied (publickey).
      fatal: Could not read from remote repository.
      
      Please make sure you have the correct access rights
      and the repository exists.
      ````
%p solution:
%pre
  %code
    :preserve
      ````
      [webmail@ localhost focus_mail_agent]$ git config --local -e
      
      url = git@github.com:jay16/focus_mail_agent.git
      to 
      url = https://github.com/jay16/focus_mail_agent.git
      ````
%p
  referenced:
  %a{:href => "!http://www.shenyanchao.cn/blog/2013/09/16/git-ssh-connection/"} 提交代码到 GitHub SSH 错误解决方案
%h3 linux environment
%p linux bash comand installed by hand, can execute in terminal but not script file
%pre
  %code
    :preserve
      `alias | grep COMMAND`
%p add COMMAND basepath into env[PATH] in ~/.bash_profile.
%pre
  %code
    :preserve
      ````
      # ~/.bash_profile
      PATH="BASEPATH:$PATH"
      ````
%p activate env[PATH].
%pre
  %code
    :preserve
      `source ~/.bash_profile`
%p then script file will execute successfully.
%p
  %strong not over
%p it's not ok when you execute bash code through ssh!
%pre
  %code
    :preserve
      + .bash_profile for user environment
      + .bashrc for bash environment, .bash_profile's substitute
%h3 crontab execute base script to startup webserver
%ol
  %li Bundler/Unicorn/Rake Not found.
%p reason:
%pre
  %code
    :preserve
      `crontab environment variable not same with user.`
%p solution:
%pre
  %code
    :preserve
      ````
      source ~/.bashrc 
      source ~/.bash_profile
      ````
%p best solution when use rvm:
%pre
  %code
    :preserve
      ````
      source /usr/local/rvm/environments/ruby-1.9.2-p320
      # source /usr/local/rvm/environments/ruby-version-you-use
      # a line code export all need variable
      ````
%ol
  %li gem#settinglogic abort when startup webserver
%p abort text:
%pre
  %code
    :preserve
      ````
      /lib/settingslogic.rb:102:in 'read': "\xE4" on US-ASCII (Encoding::InvalidByteSequenceError)
      ````
%p reason:
%p around bash environment setting with character setting.
%p solution:
%pre
  %code
    :preserve
      ````
      export LANG=zh_CN.UTF-8
      ````
%p
  +. generated at 2014/12/30 by jay
  +. updated at 2015/01/03 by jay
  +. updated at 2015/01/09 by jay
